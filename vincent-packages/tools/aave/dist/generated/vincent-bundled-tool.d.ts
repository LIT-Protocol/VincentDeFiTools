/**
 * DO NOT EDIT THIS FILE. IT IS GENERATED ON BUILD.
 */
export declare const bundledVincentTool: import("@lit-protocol/vincent-tool-sdk").BundledVincentTool<import("@lit-protocol/vincent-tool-sdk").VincentTool<import("zod").ZodObject<{
    operation: import("zod").ZodNativeEnum<typeof import("../lib/schemas").AaveOperation>;
    asset: import("zod").ZodString;
    amount: import("zod").ZodEffects<import("zod").ZodString, string, string>;
    interestRateMode: import("zod").ZodOptional<import("zod").ZodNumber>;
    onBehalfOf: import("zod").ZodOptional<import("zod").ZodString>;
    chain: import("zod").ZodEffects<import("zod").ZodString, string, string>;
    rpcUrl: import("zod").ZodOptional<import("zod").ZodString>;
}, "strip", import("zod").ZodTypeAny, {
    chain?: string;
    operation?: import("../lib/schemas").AaveOperation;
    asset?: string;
    amount?: string;
    interestRateMode?: number;
    onBehalfOf?: string;
    rpcUrl?: string;
}, {
    chain?: string;
    operation?: import("../lib/schemas").AaveOperation;
    asset?: string;
    amount?: string;
    interestRateMode?: number;
    onBehalfOf?: string;
    rpcUrl?: string;
}>, string, import("@lit-protocol/vincent-tool-sdk/internal").ToolPolicyMap<readonly [], never>, {}, import("zod").ZodObject<{
    txHash: import("zod").ZodString;
    operation: import("zod").ZodNativeEnum<typeof import("../lib/schemas").AaveOperation>;
    asset: import("zod").ZodString;
    amount: import("zod").ZodString;
    timestamp: import("zod").ZodNumber;
    interestRateMode: import("zod").ZodOptional<import("zod").ZodNumber>;
}, "strip", import("zod").ZodTypeAny, {
    operation?: import("../lib/schemas").AaveOperation;
    asset?: string;
    amount?: string;
    interestRateMode?: number;
    txHash?: string;
    timestamp?: number;
}, {
    operation?: import("../lib/schemas").AaveOperation;
    asset?: string;
    amount?: string;
    interestRateMode?: number;
    txHash?: string;
    timestamp?: number;
}>, import("zod").ZodObject<{
    error: import("zod").ZodString;
}, "strip", import("zod").ZodTypeAny, {
    error?: string;
}, {
    error?: string;
}>, import("zod").ZodObject<{
    operationValid: import("zod").ZodBoolean;
    assetValid: import("zod").ZodBoolean;
    amountValid: import("zod").ZodBoolean;
    userBalance: import("zod").ZodOptional<import("zod").ZodString>;
    allowance: import("zod").ZodOptional<import("zod").ZodString>;
    borrowCapacity: import("zod").ZodOptional<import("zod").ZodString>;
    estimatedGas: import("zod").ZodOptional<import("zod").ZodNumber>;
    availableMarkets: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodString>>;
    supportedChains: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
}, "strip", import("zod").ZodTypeAny, {
    operationValid?: boolean;
    assetValid?: boolean;
    amountValid?: boolean;
    userBalance?: string;
    allowance?: string;
    borrowCapacity?: string;
    estimatedGas?: number;
    availableMarkets?: Record<string, string>;
    supportedChains?: string[];
}, {
    operationValid?: boolean;
    assetValid?: boolean;
    amountValid?: boolean;
    userBalance?: string;
    allowance?: string;
    borrowCapacity?: string;
    estimatedGas?: number;
    availableMarkets?: Record<string, string>;
    supportedChains?: string[];
}>, import("zod").ZodObject<{
    error: import("zod").ZodString;
}, "strip", import("zod").ZodTypeAny, {
    error?: string;
}, {
    error?: string;
}>>, string>;
//# sourceMappingURL=vincent-bundled-tool.d.ts.map